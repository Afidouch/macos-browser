name: Add a Log Message to Asana Task
description: Adds a comment to an Asana task
inputs:
  access-token:
    description: "Asana access token"
    required: true
    type: string
  task-url:
    description: "Asana release task URL"
    required: false
    type: string
  comment:
    description: "Comment to add to the Asana task"
    required: false
    type: string
  template:
    description: "Path to a template file for the comment (processed by envsubst before being sent to Asana)"
    required: false
    type: string
runs:
  using: "composite"
  steps:
    - id: get-automation-subtask
      uses: ./.github/actions/asana-get-release-automation-subtask-id
      with:
        access-token: ${{ inputs.access-token }}
        task-url: ${{ inputs.task-url }}

    - id: add-colaborator
      shell: bash
      env:
        ASANA_ACCESS_TOKEN: ${{ inputs.access-token }}
        ASSIGNEE_ID: ${{ steps.get-automation-subtask.outputs.assignee-id }}
        TASK_ID: ${{ steps.get-automation-subtask.outputs.automation-task-id }}
      run: |
        return_code=$(curl -fLSs "https://app.asana.com/api/1.0/tasks/${TASK_ID}/addFollowers" \
          -H "Authorization: Bearer ${ASANA_ACCESS_TOKEN}" \
          -H 'content-type: application/json' \
          --write-out '%{http_code}' \
          --output /dev/null \
          -d "{ \"data\": { \"followers\": [ \"${ASSIGNEE_ID}\" ] } }")

        if [ $return_code -ne 200 ]; then
          echo "::error::Failed to add a collaborator to the Asana task"
          exit 1
        fi

    - id: process-template-payload
      if: ${{ inputs.template }}
      shell: bash
      env:
        TEMPLATE_PATH: ${{ inputs.template }}
      run: |
        if [ ! -f $TEMPLATE_PATH ]; then
          echo "::error::Template file not found at $TEMPLATE_PATH"
          exit 1
        fi

        # Process the template file with envsubst
        payload="$(envsubst < $TEMPLATE_PATH | yq -o=j | sed -E 's/\\n( *)([^\\n])/\2/g')"
        echo "payload=$payload" >> $GITHUB_OUTPUT

    - id: process-comment-payload
      if: ${{ inputs.comment }}
      shell: bash
      env:
        COMMENT: ${{ inputs.comment}}
        WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: |

        payload="{ \"data\": { \"text\": \"${COMMENT}\n\nWorkflow URL: ${WORKFLOW_URL}\" } }"
        echo "payload=$payload" >> $GITHUB_OUTPUT

    - id: add-comment
      shell: bash
      env:
        ASANA_ACCESS_TOKEN: ${{ inputs.access-token }}
        TASK_ID: ${{ steps.get-automation-subtask.outputs.automation-task-id }}
        TASK_BODY: ${{ steps.process-template-payload.outputs.payload || steps.process-comment-payload.outputs.payload }}
      run: |
        return_code=$(curl -fLSs "https://app.asana.com/api/1.0/tasks/${TASK_ID}/stories" \
          -H "Authorization: Bearer ${ASANA_ACCESS_TOKEN}" \
          -H 'content-type: application/json' \
          --write-out '%{http_code}' \
          --output /dev/null \
          -d "$payload")

        if [ $return_code -ne 201 ]; then
          echo "::error::Failed to add a comment to the Asana task"
          exit 1
        fi

# name: Add a Log Message to Asana Task
# description: Adds a comment to an Asana task
# inputs:
#   access-token:
#     description: "Asana access token"
#     required: true
#     type: string
#   task-url:
#     description: "Asana release task URL"
#     required: false
#     type: string
#   comment:
#     description: "Comment to add to the Asana task"
#     required: true
#     type: string
# runs:
#   using: "composite"
#   steps:
#     - id: get-automation-subtask
#       uses: ./.github/actions/asana-get-release-automation-subtask-id
#       with:
#         access-token: ${{ inputs.access-token }}
#         task-url: ${{ inputs.task-url }}

#     - id: add-colaborator
#       shell: bash
#       env:
#         ASANA_ACCESS_TOKEN: ${{ inputs.access-token }}
#         ASSIGNEE_ID: ${{ steps.get-automation-subtask.outputs.assignee-id }}
#         TASK_ID: ${{ steps.get-automation-subtask.outputs.automation-task-id }}
#       run: |
#         return_code=$(curl -fLSs "https://app.asana.com/api/1.0/tasks/${TASK_ID}/addFollowers" \
#           -H "Authorization: Bearer ${ASANA_ACCESS_TOKEN}" \
#           -H 'content-type: application/json' \
#           --write-out '%{http_code}' \
#           --output /dev/null \
#           -d "{ \"data\": { \"followers\": [ \"${ASSIGNEE_ID}\" ] } }")

#         if [ $return_code -ne 200 ]; then
#           echo "::error::Failed to add a collaborator to the Asana task"
#           exit 1
#         fi

#     - id: add-comment
#       shell: bash
#       env:
#         ASANA_ACCESS_TOKEN: ${{ inputs.access-token }}
#         TASK_ID: ${{ steps.get-automation-subtask.outputs.automation-task-id }}
#         TASK_BODY: ${{ inputs.comment }}
#         WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
#       run: |
#         return_code=$(curl -fLSs "https://app.asana.com/api/1.0/tasks/${TASK_ID}/stories" \
#           -H "Authorization: Bearer ${ASANA_ACCESS_TOKEN}" \
#           -H 'content-type: application/json' \
#           --write-out '%{http_code}' \
#           --output /dev/null \
#           -d "{ \"data\": { \"text\": \"${TASK_BODY}\n\nWorkflow URL: ${WORKFLOW_URL}\" } }")

#         if [ $return_code -ne 201 ]; then
#           echo "::error::Failed to add a comment to the Asana task"
#           exit 1
#         fi
